
#INCLUDE "RWMAKE.CH"    
#INCLUDE 'SEGDES.CH'       
#INCLUDE 'protheus.CH'

User Function SEGDES()

Local cFiltro   := ""
Private NSALARIO	   :=0,NSALHORA	:=0,NORDEM		:=0
Private NSALMES		:=0,NSALDIA		:=0,NLUGAR		:=0
Private NVALULT		:=0,NVALPEN		:=0,NVALANT		:=0
Private NVALULTSAL	:=0,NVALPENSAL	:=0,NVALANTSAL	:=0,NX		:=0
Private lEmpSEGDES	:= If( SuperGetMv("MV_SEGDES",,"2") == "1", .T. , .F. )

Private ADRIVER 	:= {}
Private TAMANHO 	:= "P"

SetPrvt("CTIT,CDESC1,CDESC2,CDESC3,CSTRING,CALIAS")
SetPrvt("AORD,WNREL,CPERG,CFILANTE,LEND,LFIRST")
SetPrvt("ARETURN,AINFO,NLASTKEY")
SetPrvt("CFILDE,CFILATE,CMATDE,CMATATE,CCOMPL")
SetPrvt("CCCDE,CCCATE,NVIAS,DDTBASE,CVERBAS,DDEMIDE,DDEMIATE")
SetPrvt("CNOME,CEND,CCEP,CUF,CFONE,CMAE,CTPINSC")
SetPrvt("CCGC,CCNAE,CPIS,CCTPS,CCTSERIE,CCTUF")
SetPrvt("CCBO,COCUP,DADMISSAO,DDEMISSAO,CSEXO,CGRINSTRU")
SetPrvt("DNASCIM,CHRSEMANA,CMAT,CFIL,CCC,CNMESES")
SetPrvt("C6SALARIOS,CINDENIZ,DDTULTSAL,DDTPENSAL,DDTANTSAL,CTIPO")
SetPrvt("CVALOR,CCPF,aCodFol, cEndCompl")

//+--------------------------------------------------------------+
//¦ Define Variaveis Locais (Basicas)                            ¦
//+--------------------------------------------------------------+
cTit     :=	'Rosenberger Domex - REQUERIMENTO DE SEGURO-DESEMPREGO - S.D. '
cDesc1   :=	STR0002 // 'Requerimento de Seguro-Desemprego - S.D.'
cDesc2   :=	STR0003 // 'Será impresso de acordo com os parametros solicitados pelo'
cDesc3   :=	STR0004 // 'usuario.'
cString  :=	'SRA'
cAlias   :=	'SRA'
aOrd     :=	{STR0005,STR0006}	// 'Matricula'###'Centro de Custo'
WnRel    :=	'SEGDES'
cPerg    :=	'SEGDES'                    
cFilAnte :=	Replicate("·", FWGETTAMFILIAL)
lEnd     :=	.F.
lFirst   :=	.T.
//aReturn  :=	{ STR0007,1,STR0008,1,2,1,'',1 }	// 'Zebrado'###'Administraçäo'	
aReturn  := { "Zebrado", 1,"Administracao", 2, 2, 1, "",2 } 
aInfo    :=	{}
nLastKey :=	0
nLinha	:=	0
aRegs    :=	{}

AjustaSX()

//+--------------------------------------------------------------+                      
//¦ Verifica as perguntas selecionadas                           ¦
//+--------------------------------------------------------------+
pergunte('SEGDES',.F.)
   
//+--------------------------------------------------------------+
//¦ Variaveis utilizadas para parametros                         ¦
//¦ MV_PAR01        //  FiLial De                                ¦
//¦ MV_PAR02        //  FiLial Ate                               ¦
//¦ MV_PAR03        //  Matricula De                             ¦
//¦ MV_PAR04        //  Matricula Ate                            ¦
//¦ MV_PAR05        //  Centro De Custo De                       ¦
//¦ MV_PAR06        //  Centro De Custo Ate                      ¦
//¦ MV_PAR07        //  Nº de Vias                               ¦
//¦ MV_PAR08        //  Data Base                                ¦
//¦ MV_PAR09        //  Verbas a serem somadas ao Salario        ¦
//¦ MV_PAR10        //  Compl.Verbas a somar ao Salario          ¦
//¦ MV_PAR11        //  Data Demissao De                         ¦
//¦ MV_PAR12        //  Data Demissao Ate                        ¦
//¦ MV_PAR13        //  1=impressao Grafica; 2=Impressao Zebrada ¦
//¦ MV_PAR14        //  Somar verbas da Rescisao; 1=Sim; 2=Nao   ¦
//+--------------------------------------------------------------+
   
//+--------------------------------------------------------------+
//¦ Envia controle para a funcao SETPRINT                        ¦
//+--------------------------------------------------------------+
WnRel :=SetPrint(cString,WnRel,cPerg,cTit,cDesc1,cDesc2,cDesc3,.F.,aOrd,,Tamanho)

//Tamanho := If( aReturn[4] == 2, "G", "M" )

nOrdem   := aReturn[8]

cFilDe	 := If(!Empty(MV_PAR01), MV_PAR01, Space(FWGETTAMFILIAL))
cFilAte	 := If(!Empty(MV_PAR02), MV_PAR02, Replicate("Z", FWGETTAMFILIAL))
cMatDe	 := If(!Empty(MV_PAR03), MV_PAR03, Space(GetSx3Cache("RA_MAT", "X3_TAMANHO")))
cMatAte	 := If(!Empty(MV_PAR04), MV_PAR04, Replicate("Z", GetSx3Cache("RA_MAT", "X3_TAMANHO")) )
cCCDe	    := If(!Empty(MV_PAR05), MV_PAR05, Space(GetSx3Cache("RA_CC", "X3_TAMANHO")))
cCCAte	 := If(!Empty(MV_PAR06), MV_PAR06, Replicate("Z", GetSx3Cache("RA_CC", "X3_TAMANHO")) )
nVias	    := If(!Empty(MV_PAR07), IIf(MV_PAR07 <= 0, 1, MV_PAR07), 1)
dDtBase   := If(!Empty(MV_PAR08), IIf(Empty(MV_PAR08), dDataBase, MV_PAR08), dDataBase)
cVerbas   := AllTrim(MV_PAR09) + AllTrim(MV_PAR10)
dDemiDe   := MV_PAR11
dDemiAte  := MV_PAR12
   
Private nTipoRel := 1//MV_PAR13 // 1= impressao Grafica; 2= Impressao Zebrada
Private nVerbRes := MV_PAR14 // Somar verbas da Rescisao; 1=Sim; 2=Nao
Private cFonte	 := "Arial"
Private nTamFon := 09   //10
Private oFont10 := TFont():New( cFonte, nTamFon, nTamFon, , .F., 100, , 100, , , .F. )
cFiltro:=aReturn[7]     
cAcessaSRA =""   

If !Empty(cFiltro)  
	cAcessaSRA	:= &( " { || " + ChkRH( "SEGDES" , "SRA" , "2" ) + " .And. " + cFiltro + " } " )
Else
	cAcessaSRA	:= &( " { || " + ChkRH( "SEGDES" , "SRA" , "2" ) + " } " )
Endif

fTransVerba()

If ! fInicia(cString)
	Return
Endif     

If nTipoRel = 1
	lFirst := .T.
	oPrint := TMSPrinter():New( STR0001 )
	oPrint:SetPortrait()
Endif	

nLinha	:= 6

RptStatus({|| fSegDes()})

If nTipoRel == 1
	oPrint:Preview()  
Endif                  

Return

//-------------------------------------------------

Static Function fSegDes()

Local nCont := 0
Local nX
Local nTam	:= 0 

dbSelectArea('SRA')
dbSetOrder(nOrdem)
SetRegua(RecCount())
dbSeek(cFilDe + cMatDe,.T.)

Do While !Eof()	
	IncRegua()

	If SRA->RA_FILIAL != cFilAnte
		If	!fInfo(@aInfo,SRA->RA_FILIAL) .or. !( Fp_CodFol(@aCodFol,Sra->Ra_FILIAL) )
			dbSkip()
			Loop
		Endif		
		cFilAnte := SRA->RA_FILIAL		
	Endif		
	
	If lEnd
		@ pRow()+ 1, 00 PSAY STR0009 // ' CANCELADO PELO OPERADOR . . . '
		Exit
	EndIF
	
	If 	(SRA->RA_FILIAL < cFilDe)	.Or. (SRA->RA_FILIAL > cFilAte)	.Or.;
		(SRA->RA_MAT < cMatDe)		.Or. (SRA->RA_MAT > cMatAte)	.Or.;
		(SRA->RA_CC < cCcDe)		.Or. (SRA->RA_CC > cCCAte) 
        SRA->(dbSkip())
		Loop
	EndIf
	
	cAlias := Alias()                                                            
	lAchouSrg := .F.
	dbSelectArea('SRG')     
	If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT)
		While ! EOF() .And. SRA->RA_FILIAL+SRA->RA_MAT == SRG->RG_FILIAL+SRG->RG_MAT
			If (SRG->RG_DATADEM < dDemiDe) .Or. (SRG->RG_DATADEM > dDemiAte) .Or. SRG->RG_EFETIVA == "N"
				SRG->(dbSkip())
				Loop
			EndIf
			lAchouSrg := .T.
			Exit
		Enddo
	EndIf    

	If ! lAchouSrg .OR.(SRG->RG_DATADEM < dDemiDe) .Or. (SRG->RG_DATADEM > dDemiAte) .Or. SRG->RG_EFETIVA == "N"
		dbSelectArea("SRA")
		dbSkip()
		Loop
	Endif
	
	IF !( SRA->RA_FILIAL $ fValidFil() .and. SRA->( Eval( cAcessaSRA ) ) )
		dbSelectArea("SRA")
   		dbSkip()
  		Loop
	EndIF

	cIndeniz   := fPHist82(SRG->RG_FILIAL,'32',SRG->RG_TipoRes,32,1)
	
	cNome      := Left(SRA->RA_Nome,38)
	cMae       := Left(SRA->RA_Mae,38)     
	cEndCompl  := AllTrim(SRA->RA_Endereco) + ' ' + AllTrim(SRA->RA_NUMENDE) + ' ' + AllTrim(SRA->RA_Complem) + '-' + AllTrim(SRA->RA_Bairro)   + '-' + AllTrim(SRA->RA_MUNICIP)
	cEnd       := Left(cEndCompl, If( nTipoRel=1, 40, 38 )) 	
	cCompl	  := If( nTipoRel=1, substr(cEndCompl,41,16) , substr(cEndCompl,39,14) )
	If Len(cCompl) < 14 
		nTam	  := 14 - Len(cCompl)
		cCompl  := cCompl+space(nTam)
	Endif 
	cCep       := Transform(Left(SRA->RA_Cep,8),'@R #####-###')
	cUF        := Left(SRA->RA_Estado,2)
	cFone      := Left(alltrim(SRA->RA_Telefon),10)
	cTpInsc    := If(aInfo[15]==1,'2','1') //-- 1=C.G.C. 2=C.E.I.
	cCgc       := Transform(Left(aInfo[8],14),'@R ')
	cCNAE      := Left(aInfo[16],5)
	cPis       := Left(SRA->RA_Pis,11)
	cCTPS      := Left(SRA->RA_NumCp,7)
	cCTSerie   := Right(Alltrim(SRA->RA_SerCp),3)
	cCTUF      := Left(SRA->RA_UFCP,2)
	cCBO       := fCodCBO(SRA->RA_FILIAL,SRA->RA_CODFUNC,dDtBase)
	cOcup      := DescFun(SRA->RA_CodFunc,SRA->RA_FILIAL)
	dAdmissao  := SRA->RA_Admissa
	dDemissao  := SRG->RG_DATADEM
	cSexo      := If(Sra->RA_Sexo=='M','1','2')
	dNascim    := SRA->RA_Nasc
	cHrSemana  := StrZero(Int(SRA->RA_HRSEMAN),2)
	cMat       := SRA->RA_MAT
	cFil       := SRA->RA_FILIAL
	cCC        := SRA->RA_CC
	cCpf	     := SRA->RA_CIC
	cNMeses    := fMesesTrab (SRA->RA_ADMISSA, SRG->RG_DATADEM)
	cNMeses	  := If (SRA->RA_MESESAN > 0,cNMeses + SRA->RA_MESESAN,CNMeses) 
	cNMeses    := If(cNMeses<=36,StrZero(cNMeses,2),'36')
	c6Salarios := If(Val(cNMeses)+SRA->RA_MesesAnt>=6,'1','2')
	cRazao     := PadR(aInfo[3],40)
	
	cAlias := Alias()
	dbSelectArea('SRG')
	If dbSeek(SRA->RA_FILIAL+SRA->RA_Mat,.F.)
		cIndeniz   := fPHist82(SRA->RA_FILIAL,'32',SRG->RG_TipoRes,32,1)
	Else
		cIndeniz   := ' '	
	EndIf
	dbSelectArea(cAlias)

	If cIndeniz == "I"
	   cIndeniz := "1"
	Else
	   cIndeniz := "2"
	Endif

	cGrInstru := "1"
	If SRA->RA_GRINRAI == "10"
		cGrInstru := "1"
	Elseif SRA->RA_GRINRAI == "20"
		cGrInstru := "2"					
	Elseif SRA->RA_GRINRAI == "25"
		cGrInstru := "3"					
	Elseif SRA->RA_GRINRAI == "30"
		cGrInstru := "4"					
	Elseif SRA->RA_GRINRAI == "35"
		cGrInstru := "5"					
	Elseif SRA->RA_GRINRAI == "40"
		cGrInstru := "6"					
	Elseif SRA->RA_GRINRAI == "45"
		cGrInstru := "7"					
	Elseif SRA->RA_GRINRAI == "50"
		cGrInstru := "8"					
	Else
		cGrInstru := "9"					
	Endif

	cTipo   	:= "A"
	nSalMes		:= 0				   				//--  Incluso verbas que incorporam  ao salario 
	nVAlUlt 	:= nValPen		:= nValant		:=0
	NValUltSal	:= nValPenSal	:= nValAntSal	:=0
		
		//-- Data do Ultimo Salario 
	dDTUltSal 	:= If(Month(dDemissao)-1 != 0, CtoD('01/' +StrZero(Month(dDemissao)-1,2)+'/'+Right(StrZero(Year(dDemissao),4),2)),CtoD('01/12/'+Right(StrZero(Year(dDemissao)-1,4),2)) )
	If MesAno(dDTUltSal) < MesAno(dAdmissao)
		dDTUltSal 	:= CTOD("  /  /  ")
 		NValUltSal 	:= 0.00
    Endif					

	//-- Data do Penultimo Salario.     
	dDTPenSal := If(Month(dDTUltSal)-1 != 0, CtoD('01/' +StrZero(Month(dDTUltSal)-1,2)+'/'+Right(StrZero(Year(dDTUltSal),4),2)),CtoD('01/12/'+Right(StrZero(Year(dDTUltSal)-1,4),2)) )
	If MesAno(dDtPenSal) < MesAno(dAdmissao)
		dDTPenSal 	:= CTOD("  /  /  ")
 		nValPenSal 	:= 0.00
    Endif

	//-- Data do Antepenultimo Salario.	
	dDTAntSal := If(Month(dDtPenSal)-1 != 0,CtoD('01/'+StrZero(Month(dDtPenSal)-1,2)+'/'+Right(StrZero(Year(dDtPenSal),4),2)),CtoD('01/12/'+Right(StrZero(Year(dDtPenSal)-1,4),2)) )	
	If MesAno(dDtAntSal) < MesAno(dAdmissao)
		dDTAntSal 	:= CTOD("  /  /  ")
		nValAntSal 	:= 0.00
    Endif
	
//--Ultimo 
	If !Empty(dDTUltSal)              
		nValUltSal := fBuscaAcm(cVerbas + acodfol[318,1]  ,,dDTUltSal,dDTUltSal,"V")	//-- Salario do mes + verbas que incorporaram  ao salario
		//--Pesquisa no movimento mensal quando o mes corrente estiver aberto
		//--e nao encontrar salario nos acumulados anuais.
		If nValPen == 0 .And. MesAno(dDTUltSal) == SuperGetMv("MV_FOLMES")
			If SRC->(Dbseek(SRA->(RA_FILIAL+RA_MAT)))
				While !SRC->(eof()) .And. SRA->(RA_FILIAL+RA_MAT) == SRC->(RC_FILIAL+RC_MAT)
					If SRC->RC_PD $cVerbas + acodfol[318,1]
						nValUltSal += SRC->RC_VALOR
					Endif
					SRC->(dbskip())
				Enddo
			Endif
		Endif
	Endif	
			
	fSomaSrr(StrZero(Year(dDTUltSal),4), StrZero(Month(dDTUltSal),2), cVerbas, @nValUlt)
    //--Penultimo 
	If !Empty(dDTPenSal)              
		nValPen := fBuscaAcm(cVerbas + acodfol[318,1]  ,,dDTPenSal,dDTPenSal,"V")	//-- Salario do mes + verbas que incorporaram  ao salario
	Endif
	//--Antepenultimo
	If !Empty(dDTAntSal)
		nValAnt := fBuscaAcm(cVerbas + acodfol[318,1], NIL, dDTAntSal, dDTAntSal, "V") 	//-- Salario do mes + verbas que incorporaram  ao salario 
	Endif
	
	//--Somar verbas informardas aos salarios
	nValUltSal += If( nVerbRes == 1, nValUlt, 0 )
	nValPenSal += nValPen
	nValAntSal += nValAnt

	For Nx := 1 to nVias
		If nCont >= 2
			SetPrc(0,0)
			nLinha	:= 10
		Else
			nCont:= nCont + 1
		Endif

		If nTipoRel == 1
			fImpSegGraf(Nx)
		Else
			fImpSeg()
		EndIf			
			
		If aReturn[5] != 1
			If lFirst  
				fInicia(cString)
				nLinha	:= 10
				//Pergunte("GPR30A",.T.)                 
				lFirst	:= .F.//If(MV_PAR01 = 1 ,.F. , .T. )    //  Impressao Correta ? Sim/Nao 
				If lFirst == .T.       						// Se impressao esta incorreta, zera contador para imprimir o numero de vias correto
					nx := 0 
					Loop 
				EndIf
			EndIf    
    	Endif
	Next Nx

	dbSelectArea("SRA")
	dbSkip()	
EndDo	

//+--------------------------------------------------------------+
//¦ Termino do Relatorio.                                        ¦
//+--------------------------------------------------------------+
dbSelectArea( 'SRA' )
RetIndex('SRA')
dbSetOrder(1)   
dbGoTop()
Set Device To Screen

If aReturn[5] == 1 .And. nTipoRel != 1
	Set Printer To
	dbCommitAll()
	OurSpool(WnRel)
Endif

MS_Flush()

Return

//---------------------------------------------------

Static Function fImpSeg()
Local nColIni	:= 08 

If Tamanho == "M" .and. aReturn[4] == 2
	@ nLinha,nColIni PSAY &(aDriver[3])
ElseIf Tamanho == "M" .and. aReturn[4] == 1
	@ nLinha,nColIni PSAY &(aDriver[4])
Else
	@ nLinha,nColIni PSAY &(aDriver[5])
EndIf

@ nLinha, nColIni PSAY  fPluSpace( cNome ) 
nLinha	+= 3 
@ nLinha, nColIni PSAY  fPluSpace( cMae )
nLinha	+= 3 
@ nLinha, nColIni PSAY fPluSpace( cEnd )
nLinha	+= 3
@ nLinha, nColini      PSAY fPluSpace( cCompl )
@ nLinha, nColIni+ 30  PSAY fPluSpace( cCep )
@ nLinha, nColIni+ 50  PSAY fPluSpace( cUF )
@ nLinha, nColIni+ 56  PSAY fPluSpace( cFone )
nLinha	+= 3 
@ nLinha, nColIni      PSAY fPluSpace( cPIS )
@ nLinha, nColIni+ 26  PSAY fPluSpace( cCTPS ) 
@ nLinha, nColIni+ 40  PSAY fPluSpace( cCTSerie )
@ nLinha, nColIni+ 46  PSAY fPluSpace( cCTUF )
@ nLinha, nColIni+ 54  PSAY fPluSpace( cCPF )
nLinha	+= 3
@ nLinha, nColIni+ 08  PSAY fPluSpace( cTpInsc )
@ nLinha, nColIni+ 13  PSAY fPluSpace( cCgc )
@ nLinha, nColIni+ 44  PSAY fPluSpace( cCNAE )
nLinha	+= 3
@ nLinha, nColIni      PSAY fPluSpace( cCBO )
@ nLinha, nColIni+ 14  PSAY cOcup 
nLinha	+= 6
@ nLinha, nColIni     PSAY fPluSpace( StrZero(Day(dAdmissao),2) ) + fPluSpace( StrZero(Month(dAdmissao),2) )+ fPluSpace( Right(StrZero(Year(dAdmissao),4),2))
@ nLinha, nColIni+ 15 PSAY fPluSpace( StrZero(Day(dDemissao),2) ) + fPluSpace( StrZero(Month(dDemissao),2) )+ fPluSpace( Right(StrZero(Year(dDemissao),4),2))
@ nLinha, nColIni+ 38 PSAY fPluSpace( cSexo )
@ nLinha, nColIni+ 50 PSAY fPluSpace( cGrInstru )
@ nLinha, nColIni+ 55 PSAY fPluSpace( StrZero(Day(dNascim),2) )+ fPluSpace( StrZero(Month(dNascim),2)) + fPluSpace( Right(StrZero(Year(dNascim),4),2))
@ nLinha, nColIni+ 70 PSAY fPluSpace( cHrSemana )
nLinha	+= 3
@ nLinha, nColIni     PSAY fPluSpace( StrZero(Month(dDtAntSal),2))
@ nLinha, nColIni+ 05 PSAY fPluSpace( Transform(nValAntSal*100,'@E 9999999999' ))
@ nLinha, nColIni+ 25 PSAY fPluSpace( StrZero(Month(dDtPenSal),2) )
@ nLinha, nColIni+ 30 PSAY fPluSpace( Transform(nValPenSal*100,'@E 9999999999'))
@ nLinha, nColIni+ 51 PSAY fPluSpace( StrZero(Month(dDtUltSal),2) )
@ nLinha, nColIni+ 56 PSAY fPluSpace( Transform(nValUltSal*100,'@E 9999999999'))
nLinha	+= 3
@ nLinha, nColIni     PSAY fPluSpace( Transform( ( nValAntSal+nValPenSal+nValUltSal) *100,'@E 9999999999'))
@ nLinha, nColIni+ 72 PSAY fPluSpace( cNMeses  )
nLinha	+= 3
@ nLinha, nColIni+ 20 PSAY fPluSpace( c6Salarios)
@ nLinha, nColIni+ 39 PSAY fPluSpace( cIndeniz  )
nLinha	+= 15
@ nLinha, nColIni PSAY fPluSpace( cPis )
nLinha	+= 3
@ nLinha, nColIni PSAY fPluSpace( cNome )

If lEmpSEGDES
	nLinha	+= 2
	@ nLinha, nColIni+ 20 PSAY fPluSpace( cRazao )
Endif

nLinha	+= 09
@ nLinha, 00 PSAY ' '

Return

//------------------------------------------------------------

Static Function fSomaSrr(cAno, cMes, cVerbas, nValor)

Local lRet    := .T.
Local cPesq   := ''
Local cFilSRR := xFilial('SRR', SRA->RA_FILIAL)
Local dDtGerar:= ctod('  /  /  ')	

//-- Reinicializa Variaveis
cAno    := If(Empty(cAno), StrZero(Year(dDTUltSal),4), cAno)
cMes    := If(Empty(cMes), StrZero(Month(dDTUltSal),2), cMes)
cVerbas := If(Empty(cVerbas), '', AllTrim(cVerbas))
nValor  := If(Empty(nValUlt) .OR. ValType(nValUlt) != 'N', 0, nValUlt)

Begin Sequence

	If Empty(cVerbas) .Or. Len(cVerbas) < 3 .Or. ;
		!SRR->(dbSeek((cPesq := cFilSRR + SRA->RA_MAT +'R'+ cAno + cMes), .T.))
		lRet := .F.
		Break
	EndIf

	dbSelectarea('SRG')
	If dbSeek(SRA->RA_FILIAL+SRA->RA_Mat,.F.)
		dDtGerar := SRG->RG_DTGERAR
		dbSelectArea("SRR")
		dbSeek(SRA->RA_FILIAL+SRA->RA_Mat,.F.)
		While !EOF() .And. RR_FILIAL+RR_MAT == cFil+cMat
			If dDtGerar == SRR->RR_DATA
				If SRR->RR_PD $ cVerbas
					If PosSrv(SRR->RR_PD,SRR->RR_FILIAL,"RV_TIPOCOD") $ "1*3"
				  		nValor += SRR->RR_VALOR
					Else
						nValor -= SRR->RR_VALOR
					EndIf
				Endif
			EndIf
			SRR->(DbSkip())
		Enddo	
	EndIf

	If nValor == 0
		lRet := .F.
		Break
	EndIf

End Sequence
dbSelectArea('SRA')
Return lRet

//----------------------------------------------

Static Function fInicia(cString)

//--Lendo os Driver's de Impressora e gravando no Array--// 
MS_Flush()
aDriver := ReadDriver()
If nLastKey == 27
	Return .F.
Endif
If !(mv_par13 == 1 )
	SetDefault(aReturn,cString)      
Endif
If nLastKey == 27
	Return  .F. 
Endif
Return .T.

//----------------------------------------------------------

Static Function  fTransVerba()
Local cPD	:= ""
Local nX	:= 0

For nX := 1 to Len(cVerbas) step 3 
	cPD += Subs(cVerbas,nX,3)
	cPD += "/" 
Next nX

cVerbas:= cPD

Return( )

//--------------------------------------------------------

Static Function  fPluSpace( cDet )
Local cDetF :=""
Local nX	:= 0

For nX := 1 to Len(cDet)
	cDetF += Subs(cDet,nX,1) + space(1)
Next nX    

Return(cDetF)

//------------------------------------------------

Static Function fImpSegGraf( nNumVias )
Local nLinha	:= 235+50//100
Local nColun	:= 150 //160
Local nTresSal	:= 0
Local cDtAdmis	:= ""
Local cDtDemis	:= ""
Local cDtNasci	:= ""

oPrint:StartPage() //Inicia uma nova pagina
                  
//C A M P O [02]
//----------------------                  
fIncSpace( cNome, nlinha, nColun )	//Nome

//C A M P O [03]
//----------------------                  
nLinha += 150
fIncSpace( cMae, nlinha, nColun )	//Nome da Mae

//C A M P O [04]
//----------------------                  
nLinha += 160
fIncSpace( cEnd, nlinha, nColun )	//Endereco

nLinha += 150
fIncSpace( cCompl			, nLinha, nColun 		) //Complemento endereco
fIncSpace( Subst(cCep,1,5)	, nLinha, nColun + 0890	) //CEP //0860
fIncSpace( Subst(cCep,7,3)	, nLinha, nColun + 1215	) //CEP //1200
fIncSpace( cUF				, nLinha, nColun + 1420	) //UF
fIncSpace( cFone			, nLinha, nColun + 1600) //Telefone

//C A M P O [05]
//----------------------                  
nLinha += 150
fIncSpace( cPIS		, nLinha, nColun ) //Pis -020
//C A M P O [06]
//----------------------                  
fIncSpace( cCTPS	, nLinha, nColun + 0735 ) //CTPS
fIncSpace( cCTSerie	, nLinha, nColun + 1100 ) //Serie CTPS
fIncSpace( cCTUF	, nLinha, nColun + 1270 ) //UF CTPS
//C A M P O [07]
//----------------------                  
fIncSpace( cCPF		, nLinha, nColun + 1590-40 ) //CPF

//C A M P O [08]
//----------------------                  
nLinha += 165 //199 
fIncSpace( cTpInsc	, nLinha, nColun + 0260 ) //Tipo Inscricao  140
//C A M P O [09]
//----------------------                  
fIncSpace( cCgc		, nLinha, nColun + 0365 ) //CNPJ/CEI
//C A M P O [10]
//----------------------                  
fIncSpace( cCNAE	, nLinha, nColun + 1272-45 ) //Atividade economica

//C A M P O [11]
//----------------------                  
nLinha += 170 //180
fIncSpace( Subst(cCBO,1,5)	, nLinha, nColun  ) //CBO
fIncSpace( Subst(cCBO,6,1)	, nLinha, nColun + 0315 ) //CBO Digito 285
fIncSpace( cOcup			, nLinha, nColun + 0397 ) //Ocupacao

cDtAdmis := StrZero(Day(dAdmissao),2) + StrZero(Month(dAdmissao),2) + Right(StrZero(Year(dAdmissao),4),2)
cDtDemis := StrZero(Day(dDemissao),2) + StrZero(Month(dDemissao),2) + Right(StrZero(Year(dDemissao),4),2)
cDtNasci := StrZero(Day(dNascim),2)   + StrZero(Month(dNascim),2)   + Right(StrZero(Year(dNascim),4),2)

//C A M P O [12]
//---------------------- 
nLinha += 265
fIncSpace( cDtAdmis		,nLinha, nColun ) //Data admissao -20

//C A M P O [13]
//---------------------- 
fIncSpace( cDtDemis		,nLinha, nColun + 0420 ) //Data dispensa  390


//C A M P O [14]
//---------------------- 
fIncSpace( cSexo		,nLinha, nColun + 1060 ) //Sexo  //1030

//C A M P O [15]
//---------------------- 
fIncSpace( cGrInstru	,nLinha, nColun + 1345 ) //Grau de instrucao //1355

//C A M P O [16]
//---------------------- 
fIncSpace( cDtNasci		,nLinha, nColun + 1485 ) //Data nascimento 1500

//C A M P O [17]
//---------------------- 
fIncSpace( cHrSemana	,nLinha, nColun + 1920) //Horas trabalhadas por semana 1935
               
//C A M P O [18]
//---------------------- 
nLinha += 160
fIncSpace( StrZero( Month( dDtAntSal ), 2 )					, nLinha, nColun - 005)	//Mes antepenultimo salario -45
fIncSpace( Transform( nValAntSal * 100, '@E 9999999999')	, nLinha, nColun + 0120	)	//Antepenultimo salario
fIncSpace( StrZero( Month( dDtPenSal ), 2 )					, nLinha, nColun + 0720	)	//Mes penultimo salario 700
fIncSpace( Transform( nValPenSal * 100, '@E 9999999999')	, nLinha, nColun + 0850	)	//Penultimo salario 0870
fIncSpace( StrZero( Month( dDtUltSal ), 2 )					, nLinha, nColun + 1455	)	//Mes ultimo salario 1460
fIncSpace( Transform( nValUltSal * 100, '@E 9999999999')	, nLinha, nColun + 1570	)	//Ultimo salario 1590

nTresSal := Transform( ( nValAntSal+nValPenSal+nValUltSal ) *100,'@E 9999999999') 

//C A M P O [19]
//---------------------- 
nLinha += 150 //157
fIncSpace( nTresSal	, nLinha, nColun -010 ) //Soma 3 ultimos salarios


//C A M P O [21]
//---------------------- 
fIncSpace( cNMeses	, nLinha, nColun + 2000 ) //Qtd meses com vinculo ultimos 36 meses 2010

//C A M P O [22]
//---------------------- 
nLinha += 135  
fIncSpace( c6Salarios	, nLinha, nColun + 0485 ) //Recebeu ultimos 6 meses 0500

//C A M P O [23]
//----------------------                 //1235
fIncSpace( cIndeniz		, nLinha, nColun + 1220) //Aviso previo indenizado

nLinha += 825  

If nNumVias == 2      
	fIncSpace( cPis, nLinha, nColun - 50 ) //Pis 2o. Via

	nLinha += 120  
	fIncSpace( cNome, nLinha, nColun - 50 ) //Nome 2o. Via

	If lEmpSEGDES
		nLinha += 60	
		fIncSpace( cRazao, nLinha, nColun + 450) //Empresa 2o. Via
    Endif

EndIf

oPrint:EndPage() //Finaliza a pagina

Return

//--------------------------------------------------

Static Function fIncSpace( cTexto, nlin, nCol )
Local nPos 		:= 1
Local i 		:= 1
Local nColImpr	:= 54//55

For i := 1 To Len( cTexto )              
                            
	If Upper( SubStr( cTexto, nPos, 1 ) ) <> " "
		oPrint:say( nLin, nCol, SubStr( cTexto, nPos, 1 ),  oFont10, 100 ) //Impressao por Caracter
	EndIf

	nCol 	+= nColImpr

	nPos++
Next i    

Return( )

//-------------------------------------------------------------

Static Function AjustaSX()

Local aArea     := getArea()
Local aRegs     := {}
Local cPerg		:= "SEGDES"
Local cHelp13 	:= "" 
Local cHelp14 	:= "" 

Local aHelpPor  := {}
Local aHelpSpa  := {}
Local aHelpEng  := {}
                                
cHelp13 	:= ".GPRPPP19." 
cHelp14 	:= ".SEGDES01."

//Atualiza Help do Somar Verbas Rescisao
AADD(aHelpPor, 'Somar as verbas de rescisão no valor')
AADD(aHelpPor, 'do último Salário ?'                 )

AADD(aHelpSpa, '¿Sumar los conceptos de rescision al')
AADD(aHelpSpa, 'valor del ultimo Sueldo?'            )

AADD(aHelpEng, 'Add the types of funds in the amount')
AADD(aHelpEng, 'of last salary'                      )

PutSX1Help("P"+cHelp14, aHelpPor, aHelpSpa, aHelpEng )

/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
  ³        Grupo  Ordem Pergunta Portugues            Pergunta Espanhol            Pergunta Ingles            Variavel      Tipo  	Tamanho Decimal Presel  GSC   	Valid       	                      Var01      	Def01       DefSPA1          	DefEng1      Cnt01    Var02  	Def02   	         DefSpa2              DefEng2	   	      Cnt02     Var03 	Def03    	DefSpa3   	DefEng3  		Cnt03  	Var04  	Def04     	DefSpa4    	DefEng4  	Cnt04  	Var05  	Def05       DefSpa5		DefEng5   	Cnt05  	XF3  	GrgSxg  cPyme	aHelpPor	aHelpEng	aHelpSpa    cHelp    ³
  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Aadd(aRegs,{cPerg,"13","Tipo de Impressao ?"         ,"¿Tipo de Impressao ?"      , "Tipo de Impressao ?   " , "mv_chd"    ,"N"    ,1		,0		,2		,"C"	,""									 ,"MV_PAR13"   ,"Grafico"	,"Grafico"			,"Grafico"	,""		,""			,"Zebrado"			,"Zebrado"			,"Zebrado"			,""			,""		,""			,""			,""				,""		,""		,""			,""			,""			,""		,""		,""			,""			,""			,""		,""		,""		,"S"	, 			, 			, 			,cHelp13})
aAdd(aRegs,{cPerg,"14","Somar verbas Resc ?"         ,"¿Somar verbas Resc ?"      , "Somar verbas Resc ?   " , "mv_che"    ,"N"	,1		,0		,0		,"C"	,""	                     	         ,"MV_PAR14"   ,"Sim "		,"Si"		     	,"Yes "		,""		,""			,"Nao" 	            ,"No"		        ,"No"			    ,""			,""		,""			,""			,""				,""		,""		,""			,""			,""			,""		,""		,""			,""			,""			,""		,""		,"" 	,"S"	,aHelpPor	,aHelpSpa	,aHelpEng   ,cHelp14})

ValidPerg( aRegs, cPerg, .T. )

RestArea( aArea )

Return